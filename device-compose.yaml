version: '3'

volumes:
  queue:
    labels:
      com.screaming_bunny.container: 'RabbitMQ'
      com.screaming_bunny.description: 'Persistent RabbitMQ Volume'

services:
  transport-mqtt:
    hostname: transport-mqtt
    image: g2inc/oif-device-transport-mqtt
    build:
      context: ./device/transport/mqtt
    env_file:
      - ./environment/queue.connect.env
      - ./environment/mqtt_transport.env
    external_links:
      - queue
    depends_on:
      - queue

  transport-https:
    hostname: transport-https
    image:  g2inc/oif-device-transport-https
    build:
      context: ./device/transport/https
    env_file:
      - ./environment/queue.connect.env
    external_links:
      - queue
    ports:
      - 5001:5001
    depends_on:
      - queue

  transport-coap:
    hostname: transport-coap
    image:  g2inc/oif-device-transport-coap
    build:
      context: ./device/transport/coap
      dockerfile: Dockerfile
    env_file:
      - ./environment/queue.connect.env
    external_links:
      - queue
    ports:
      - 5682:5682/udp
    depends_on:
      - queue

  queue:
    hostname: rabbit
    image: rabbitmq:management-alpine
    ports:
      - 15672:15672
    command: sh -c "rabbitmq-plugins enable rabbitmq_mqtt; docker-entrypoint.sh rabbitmq-server"
    volumes:
      - queue:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:15672']
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure:5

  actuator-isr:
    hostname: actuator-isr
    image:  g2inc/oif-device-actutator-isr
    build:
      context: ./device/actuator/isr
    env_file:
    - ./environment/queue.connect.env
    environment:
      QUEUE_EXCHANGE: 'actuator'
    external_links:
      - queue
    depends_on:
      - queue
    restart: on-failure:5
